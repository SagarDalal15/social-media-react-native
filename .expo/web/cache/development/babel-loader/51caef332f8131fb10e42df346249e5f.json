{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { UserContext } from \"../../contexts/user\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { signInWithEmail, signInWithGoogleToken, signUpWithEmail } from \"../../services/auth\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { provider } from \"../../firebaseConfig\";\nimport * as Google from \"expo-auth-session/providers/google\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function LoginScreen(props) {\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _Google$useIdTokenAut = Google.useIdTokenAuthRequest({\n    clientId: undefined\n  }),\n      _Google$useIdTokenAut2 = _slicedToArray(_Google$useIdTokenAut, 3),\n      request = _Google$useIdTokenAut2[0],\n      response = _Google$useIdTokenAut2[1],\n      promptAsync = _Google$useIdTokenAut2[2];\n\n  var getData = function getData() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(undefined));\n\n          case 3:\n            jsonValue = _context.sent;\n            return _context.abrupt(\"return\", jsonValue !== null ? JSON.parse(jsonValue) : null);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    var fun = function fun() {\n      var userData;\n      return _regeneratorRuntime.async(function fun$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getData());\n\n            case 2:\n              userData = _context2.sent;\n\n              if (userData) {\n                setUser(userData);\n                props.navigation.reset({\n                  index: 0,\n                  routes: [{\n                    name: \"HomeScreen\"\n                  }]\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fun();\n  }, []);\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(undefined, jsonValue));\n\n          case 4:\n            _context3.next = 8;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var HandleGoogleOAuthRes = function HandleGoogleOAuthRes(id_token) {\n    var credential, res;\n    return _regeneratorRuntime.async(function HandleGoogleOAuthRes$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            credential = provider.credential(id_token);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(signInWithGoogleToken(credential));\n\n          case 3:\n            res = _context4.sent;\n\n            if (res) {\n              setUser(res);\n              storeData(res);\n              props.navigation.reset({\n                index: 0,\n                routes: [{\n                  name: \"HomeScreen\"\n                }]\n              });\n            } else {\n              Alert.alert(\"Invalid Input!\");\n              console.log(\"Couldn't complete the firebase signIn\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var fun = function fun() {\n      var id_token;\n      return _regeneratorRuntime.async(function fun$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if ((response == null ? void 0 : response.type) === \"success\") {\n                id_token = response.params.id_token;\n                HandleGoogleOAuthRes(id_token);\n              } else {}\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fun();\n  }, [response]);\n\n  var googleButtonHandler = function googleButtonHandler() {\n    return _regeneratorRuntime.async(function googleButtonHandler$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(promptAsync());\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signUpButtonHandler = function signUpButtonHandler() {\n    var res;\n    return _regeneratorRuntime.async(function signUpButtonHandler$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(signUpWithEmail(email, password));\n\n          case 2:\n            res = _context7.sent;\n\n            if (res) {\n              setUser(res);\n              Alert.alert(\"Successfully Signed Up!\");\n            } else {\n              Alert.alert(\"Invalid Input!\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signInButtonHandler = function signInButtonHandler() {\n    var res;\n    return _regeneratorRuntime.async(function signInButtonHandler$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regeneratorRuntime.awrap(signInWithEmail(email, password));\n\n          case 2:\n            res = _context8.sent;\n\n            if (res) {\n              setUser(res);\n              storeData(res);\n              props.navigation.reset({\n                index: 0,\n                routes: [{\n                  name: \"HomeScreen\"\n                }]\n              });\n            } else {\n              Alert.alert(\"Invalid Input!\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.loginPage\n  }, React.createElement(View, {\n    style: styles.loginPageInner\n  }, React.createElement(Text, null, \"Enter Your Email\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.textField,\n    placeholder: \"Email\",\n    value: email\n  }), React.createElement(View, {\n    style: {\n      height: 5\n    }\n  }), React.createElement(Text, null, \"Enter Your Password\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.textField,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    value: password\n  }), React.createElement(View, {\n    style: styles.twoButton\n  }, React.createElement(View, {\n    style: {\n      margin: 5\n    }\n  }, React.createElement(Button, {\n    onPress: signUpButtonHandler,\n    title: \"Sign Up\"\n  })), React.createElement(View, {\n    style: {\n      margin: 5\n    }\n  }, React.createElement(Button, {\n    onPress: signInButtonHandler,\n    title: \"Sign In\"\n  }))), React.createElement(View, {\n    style: styles.gButtonView\n  }, React.createElement(Pressable, {\n    style: styles.gButton,\n    onPress: googleButtonHandler\n  }, React.createElement(Image, {\n    style: {\n      height: 45,\n      width: 45,\n      borderRadius: 4,\n      resizeMode: \"contain\"\n    },\n    source: require(\"../../assets/googleLogo.jpeg\")\n  }), React.createElement(Text, {\n    style: styles.gButtonText\n  }, \"Sign in with Google\")))));\n}\nvar styles = StyleSheet.create({\n  loginPage: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#F0F2F5\"\n  },\n  loginPageInner: {\n    flex: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textField: {\n    margin: 10,\n    backgroundColor: \"white\",\n    width: \"70%\",\n    padding: 10,\n    borderRadius: 5\n  },\n  twoButton: {\n    width: \"70%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\"\n  },\n  gButtonView: {\n    margin: 20,\n    width: \"70%\"\n  },\n  gButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingVertical: 1,\n    paddingHorizontal: 1,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"#4086F5\"\n  },\n  gButtonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    paddingRight: 26,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/sagardalal/Desktop/Desktop/Major Project/social-media-app/screens/LoginScreen/index.js"],"names":["React","useContext","useEffect","useState","AsyncStorage","UserContext","signInWithEmail","signInWithGoogleToken","signUpWithEmail","WebBrowser","provider","Google","maybeCompleteAuthSession","LoginScreen","props","user","setUser","email","setEmail","password","setPassword","useIdTokenAuthRequest","clientId","request","response","promptAsync","getData","getItem","jsonValue","JSON","parse","fun","userData","navigation","reset","index","routes","name","storeData","value","stringify","setItem","HandleGoogleOAuthRes","id_token","credential","res","Alert","alert","console","log","type","params","googleButtonHandler","signUpButtonHandler","signInButtonHandler","styles","loginPage","loginPageInner","text","textField","height","twoButton","margin","gButtonView","gButton","width","borderRadius","resizeMode","require","gButtonText","StyleSheet","create","flex","alignContent","justifyContent","backgroundColor","alignItems","padding","flexDirection","paddingVertical","paddingHorizontal","elevation","fontSize","lineHeight","paddingRight","fontWeight","letterSpacing","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Alert,\n  Image,\n  Pressable,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { UserContext } from \"../../contexts/user\";\nimport { StyleSheet } from \"react-native\";\nimport {\n  signInWithEmail,\n  signInWithGoogleToken,\n  signUpWithEmail,\n} from \"../../services/auth\";\n\nimport * as WebBrowser from \"expo-web-browser\";\nimport { provider } from \"../../firebaseConfig\";\n\n// expo-auth-session\nimport * as Google from \"expo-auth-session/providers/google\";\n\n// expo-google-app-auth\n// import * as Google from \"expo-google-app-auth\";\n\nimport { WEB_CLIENT_ID, ASYNC_STORAGE_KEY } from \"@env\";\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function LoginScreen(props) {\n  const [user, setUser] = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Google OAuth for dev (Web Client) using expo-auth-session\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest({\n    clientId: WEB_CLIENT_ID,\n  });\n\n  // Google Oauth for production (Android Client) using expo-auth-session (*NOT WORKING FOR NOW)\n  // const [request, response, promptAsync] = Google.useIdTokenAuthRequest({\n  //   clientId:\n  //     \"1071064469720-jtn7fi7g188rrfag4jdghqvqab052nm9.apps.googleusercontent.com\",\n  // });\n\n  //Async Storage => Read Data\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(ASYNC_STORAGE_KEY);\n\n      return jsonValue !== null ? JSON.parse(jsonValue) : null;\n    } catch (e) {\n      // error for reading from Async Storage\n    }\n  };\n\n  // useEffect for getting user from async storage\n  useEffect(() => {\n    const fun = async () => {\n      const userData = await getData();\n\n      if (userData) {\n        setUser(userData);\n\n        // Resetting Home Screen Index to 0\n        props.navigation.reset({\n          index: 0,\n          routes: [{ name: \"HomeScreen\" }],\n        });\n      }\n    };\n    fun();\n  }, []);\n\n  //Async Storage => Store Data\n  const storeData = async (value) => {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(ASYNC_STORAGE_KEY, jsonValue);\n    } catch (e) {\n      // saving error\n    }\n  };\n\n  const HandleGoogleOAuthRes = async (id_token) => {\n    const credential = provider.credential(id_token);\n    const res = await signInWithGoogleToken(credential);\n    if (res) {\n      setUser(res);\n      storeData(res);\n\n      // resetting Home Screen Index to 0\n      props.navigation.reset({\n        index: 0,\n        routes: [{ name: \"HomeScreen\" }],\n      });\n    } else {\n      Alert.alert(\"Invalid Input!\");\n      console.log(\"Couldn't complete the firebase signIn\");\n    }\n  };\n\n  // UseEffect for expo-auth-session for dev\n  useEffect(() => {\n    const fun = async () => {\n      if (response?.type === \"success\") {\n        const { id_token } = response.params;\n\n        HandleGoogleOAuthRes(id_token);\n      } else {\n        // response is dismiss\n      }\n    };\n    fun();\n  }, [response]);\n\n  const googleButtonHandler = async () => {\n    // For expo-auth-session for dev\n    await promptAsync();\n\n    //expo-google-app-auth for production\n    // const { type, idToken, user } = await Google.logInAsync({\n    //   androidClientId: `1071064469720-ebc8363qtc89dh2o2khe8tga55c29bmp.apps.googleusercontent.com`,\n    //   androidStandaloneAppClientId: `1071064469720-jtn7fi7g188rrfag4jdghqvqab052nm9.apps.googleusercontent.com`,\n    // });\n\n    // if (type === \"success\") {\n    //   HandleGoogleOAuthRes(idToken);\n    // } else {\n    //   // check for !success\n    // }\n  };\n\n  const signUpButtonHandler = async () => {\n    const res = await signUpWithEmail(email, password);\n\n    if (res) {\n      setUser(res);\n      Alert.alert(\"Successfully Signed Up!\");\n    } else {\n      Alert.alert(\"Invalid Input!\");\n    }\n  };\n\n  const signInButtonHandler = async () => {\n    const res = await signInWithEmail(email, password);\n\n    if (res) {\n      setUser(res);\n      storeData(res);\n\n      props.navigation.reset({\n        index: 0,\n        routes: [{ name: \"HomeScreen\" }],\n      });\n    } else {\n      Alert.alert(\"Invalid Input!\");\n    }\n  };\n\n  return (\n    <View style={styles.loginPage}>\n      <View style={styles.loginPageInner}>\n        <Text>Enter Your Email</Text>\n        <TextInput\n          onChangeText={(text) => setEmail(text)}\n          style={styles.textField}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <View style={{ height: 5 }} />\n        <Text>Enter Your Password</Text>\n        <TextInput\n          onChangeText={(text) => setPassword(text)}\n          style={styles.textField}\n          secureTextEntry={true}\n          placeholder=\"Password\"\n          value={password}\n        />\n\n        <View style={styles.twoButton}>\n          <View style={{ margin: 5 }}>\n            <Button onPress={signUpButtonHandler} title=\"Sign Up\"></Button>\n          </View>\n          <View style={{ margin: 5 }}>\n            <Button onPress={signInButtonHandler} title=\"Sign In\"></Button>\n          </View>\n        </View>\n\n        <View style={styles.gButtonView}>\n          <Pressable style={styles.gButton} onPress={googleButtonHandler}>\n            <Image\n              style={{\n                height: 45,\n                width: 45,\n                borderRadius: 4,\n                resizeMode: \"contain\",\n              }}\n              source={require(\"../../assets/googleLogo.jpeg\")}\n            />\n            <Text style={styles.gButtonText}>Sign in with Google</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loginPage: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#F0F2F5\",\n  },\n  loginPageInner: {\n    flex: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  textField: {\n    margin: 10,\n    backgroundColor: \"white\",\n    width: \"70%\",\n    padding: 10,\n    borderRadius: 5,\n  },\n\n  twoButton: {\n    width: \"70%\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\",\n  },\n  gButtonView: {\n    margin: 20,\n    width: \"70%\",\n  },\n  gButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingVertical: 1,\n    paddingHorizontal: 1,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"#4086F5\",\n  },\n  gButtonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    paddingRight: 26,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}